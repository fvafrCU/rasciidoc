% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render.R
\name{render_slides}
\alias{render_slides}
\title{Spin Knit or Render a `Rasciidoc` File to html and slidy}
\usage{
render_slides(file_name, knit = NA, working_directory = dirname(file_name),
  envir = parent.frame(), hooks = c("message", "error", "warning"),
  replacement = "source")
}
\arguments{
\item{file_name}{The file to run `asciidoc` on.}

\item{knit}{Knit the file first using \code{\link[knitr:knit]{knitr::knit}}?
If set to \code{\link{NA}}, knitting is based on the file's contents or name.
Set to \code{\link{TRUE}}
to force knitting or to \code{\link{FALSE}} (anything apart from
\code{\link{TRUE}} or \code{\link{NA}}, really), to
disable knitting.}

\item{working_directory}{Where to run \code{\link[knitr:knit]{knitr::knit}}
or \code{\link[knitr:spin]{knitr::spin}}, defaults to the input file's
directory to ensure that sourcing code into the input file works correctly.}

\item{envir}{The frame in which to render.}

\item{hooks}{Character vector naming the output hooks to be replaced by
the \code{replacement}'s hooks.}

\item{replacement}{The hook with which to replace the hooks given by
\code{hooks}.}
}
\value{
The output's file names.
}
\description{
You can exclude parts of the file from the standard html or slidy output by
using lines starting with '//begin_only_slide' and '//end_only_slide' or
'//begin_no_slide' and '//end_no_slide', respectively. To exclude single
lines from standard html output, append a '//slide_only' comment to it (for
example to add slide titles for slidy to break longer sections of standard
html output.
}
\examples{
folder  <- system.file("runit_tests", "files", package = "rasciidoc")
file.copy(folder, tempdir(), recursive = TRUE)
files <- withr::with_dir(file.path(tempdir(), "files"),
                         rasciidoc::render_slides("slides.Rasciidoc"))
# files are in tempdir()/files/:
files <- file.path(tempdir(), "files", files)
print(files)
\dontrun{
    browseURL(files[1])
    browseURL(files[2])
}
}
